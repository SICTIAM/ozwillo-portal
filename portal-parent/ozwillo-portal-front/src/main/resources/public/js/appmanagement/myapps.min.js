var MyApps=React.createClass({displayName:"MyApps",getInitialState:function(){return{loading:!0,authorities:[]}},componentDidMount:function(){$.ajax({url:apps_service+"/authorities",dataType:"json",success:function(data){this.setState({loading:!1,authorities:data})}.bind(this),error:function(xhr,status,err){}.bind(this)})},render:function(){if(this.state.loading)return React.createElement("p",{className:"text-center"},React.createElement("i",{className:"fa fa-spinner fa-spin"})," ",t("ui.loading"));var auths=this.state.authorities.map(function(auth){return React.createElement(Authority,{name:auth.name,key:auth.id,id:auth.id,isPersonal:"INDIVIDUAL"===auth.type})});return React.createElement("div",{className:"container panel-group"},auths)}}),Authority=React.createClass({displayName:"Authority",render:function(){var content=React.createElement(InstanceList,{id:this.props.id,name:this.props.name,authority:this.props.id}),title=this.props.isPersonal?React.createElement("span",null,t("apps-for-personal-use")):React.createElement("span",null,t("apps-for-organization")," ",this.props.name);return React.createElement("div",{className:"panel panel-default"},React.createElement("div",{className:"panel-heading"},React.createElement("h4",{className:"panel-title"},title)),React.createElement("div",{ref:"content"},content))}}),InstanceList=React.createClass({displayName:"InstanceList",getInitialState:function(){return{loading:!0,instances:[]}},componentDidMount:function(){this.reloadInstances()},reloadInstances:function(){this.setState(this.getInitialState()),$.ajax({url:apps_service+"/instances/"+this.props.id,dataType:"json",success:function(data){this.setState({loading:!1,instances:data})}.bind(this),error:function(xhr,status,err){}.bind(this)})},componentDidUpdate:function(){$(this.getDOMNode()).toggle("blind")},render:function(){if(this.state.loading)return React.createElement("p",{className:"text-center"},React.createElement("i",{className:"fa fa-spinner fa-spin"})," ",t("ui.loading"));var instances=this.state.instances,authority=this.props.authority,reload=this.reloadInstances,result=0!=instances.length?instances.map(function(instance){return React.createElement(Instance,{key:instance.id,id:instance.id,instance:instance,authority:authority,reload:reload})}):React.createElement("div",{className:"text-center"},React.createElement("span",null,t("none")," "),React.createElement("b",null,this.props.name));return React.createElement("div",{className:"panel collapse"},result)}}),Instance=React.createClass({displayName:"Instance",getInitialState:function(){return{}},manageUsers:function(event){event.preventDefault(),this.refs.users.init(),this.refs.manageUsers.open()},saveUsers:function(){this.refs.manageUsers.close(),$.ajax({url:apps_service+"/users/instance/"+this.props.id,dataType:"json",contentType:"application/json",type:"post",data:JSON.stringify(this.refs.users.getSelectedUsers()),error:function(xhr,status,err){}.bind(this)})},loadUsers:function(callback,error){$.ajax({url:apps_service+"/users/instance/"+this.props.id+"?app_admin=false",dataType:"json",method:"get",success:callback,error:function(xhr,status,err){void 0!=error&&error()}.bind(this)})},queryUsers:function(query,callback){$.ajax({url:apps_service+"/users/network/"+this.props.authority+"?q="+query,dataType:"json",method:"get",success:callback,error:function(xhr,status,err){}.bind(this)})},componentDidMount:function(){$("a.tip",this.getDOMNode()).tooltip()},componentDidUpdate:function(){"string"==typeof this.state.errorMessage&&this.refs.errorDialog.open()},confirmTrash:function(event){event.preventDefault(),this.refs.confirmTrash.open()},trash:function(){this.refs.confirmTrash.close(),this.setStatus("STOPPED")},confirmUntrash:function(event){event.preventDefault(),this.refs.confirmUntrash.open()},untrash:function(){this.refs.confirmUntrash.close(),this.setStatus("RUNNING")},setStatus:function(status){var instance=this.props.instance;instance={applicationInstance:{id:instance.applicationInstance.id,status:status}},$.ajax({url:apps_service+"/set-status/"+this.props.id,contentType:"application/json",type:"post",data:JSON.stringify(instance),success:function(data){if("string"==typeof data&&0!==data.trim().length){var state=this.state;state.errorMessage=data,this.setState(state)}else this.props.reload()}.bind(this),error:function(xhr,status,err){}.bind(this)})},render:function(){var applicationInstanceStatus=this.props.instance.applicationInstance.status,manageUsersButton=null;"INDIVIDUAL:"!==this.props.authority.slice(0,"INDIVIDUAL:")&&(manageUsersButton=React.createElement("button",{className:"tip btn btn-default pull-right",disabled:"STOPPED"===applicationInstanceStatus,onClick:this.manageUsers,"data-toggle":"tooltip","data-placement":"bottom",title:t("manage_users")},React.createElement("li",{className:"fa fa-user"})));var instance=this.props.id,services=this.props.instance.services.map(function(service){return React.createElement(Service,{key:service.service.id,service:service,instance:instance,status:applicationInstanceStatus})}),buttons=[],dialogs=[];if("STOPPED"===applicationInstanceStatus){var byDeleteRequesterOnDate=t("by")+" "+this.props.instance.status_change_requester_label+" ("+moment(this.props.instance.applicationInstance.status_changed)+")";buttons.push(React.createElement("a",{className:"btn btn-danger pull-right",href:"#",onClick:this.confirmUntrash},t("ui.cancel"),"...")),buttons.push(React.createElement("span",{key:"untrashTtl",className:"pull-right",style:{color:"red",fontStyle:"Italic",marginLeft:"5px",marginRight:"5px"},title:byDeleteRequesterOnDate},t("will-be-deleted")," ",moment(this.props.instance.deletion_planned).fromNow()));var confirmUntrashTitle=t("confirm-untrash.title")+" "+this.props.instance.name;dialogs.push(React.createElement(Modal,{ref:"confirmUntrash",title:confirmUntrashTitle,successHandler:this.untrash,buttonLabels:{cancel:t("ui.cancel"),save:t("ui.confirm")}},t("confirm-untrash.body")))}else{buttons.push(React.createElement("a",{className:"btn btn-danger pull-right",href:"#",onClick:this.confirmTrash},t("ui.delete"),"..."));var confirmTrashTitle=t("confirm-trash.title")+" "+this.props.instance.name;dialogs.push(React.createElement(Modal,{ref:"confirmTrash",title:confirmTrashTitle,successHandler:this.trash,buttonLabels:{cancel:t("ui.cancel"),save:t("ui.confirm")}},t("confirm-trash.body")))}return React.createElement("div",{className:"panel panel-instance"},React.createElement(Modal,{ref:"errorDialog",infobox:!0,onClose:this.props.reload,buttonLabels:{ok:t("ui.close")},title:t("ui.unexpected_error")},this.state.errorMessage),React.createElement(Modal,{ref:"manageUsers",title:t("manage_users"),successHandler:this.saveUsers},React.createElement(UserPicker,{ref:"users",users:this.loadUsers,source:this.queryUsers})),dialogs,React.createElement("div",{className:"panel-heading"},React.createElement("img",{height:"32",width:"32",alt:this.props.instance.name,src:this.props.instance.icon}),React.createElement("span",{className:"appname"},this.props.instance.name),manageUsersButton,buttons),React.createElement("div",{className:"panel-body"},React.createElement("div",{className:"standard-form"},React.createElement("div",{className:"row form-table-header"},React.createElement("div",{className:"col-sm-10"},t("services"))),services)))}});React.render(React.createElement(MyApps,null),document.getElementById("myapps"));
